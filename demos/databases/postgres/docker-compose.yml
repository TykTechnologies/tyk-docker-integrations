version: '3.9'
services:
  tyk-dashboard:
    environment:
      - TYK_DB_STORAGE_MAIN_TYPE=postgres
      - TYK_DB_STORAGE_MAIN_CONNECTIONSTRING=user=${POSTGRES_USER} password=${POSTGRES_PASSWORD} host=${POSTGRES_HOST} port=${POSTGRES_PORT} database=tyk_analytics
  tyk-pump:
    environment:
      - TYK_PMP_UPTIMEPUMPCONFIG_UPTIMETYPE=sql
      - TYK_PMP_UPTIMEPUMPCONFIG_TYPE=postgres
      - TYK_PMP_UPTIMEPUMPCONFIG_CONNECTIONSTRING=user=${POSTGRES_USER} password=${POSTGRES_PASSWORD} host=${POSTGRES_HOST} port=${POSTGRES_PORT} database=tyk_analytics

      - TYK_PMP_PUMPS_SQL_TYPE=SQL
      - TYK_PMP_PUMPS_SQL_META_TYPE=postgres
      - TYK_PMP_PUMPS_SQL_META_CONNECTIONSTRING=user=${POSTGRES_USER} password=${POSTGRES_PASSWORD} host=${POSTGRES_HOST} port=${POSTGRES_PORT} database=tyk_analytics

      - TYK_PMP_PUMPS_SQLAGGREGATE_TYPE=SQL
      - TYK_PMP_PUMPS_SQLAGGREGATE_META_TYPE=postgres
      - TYK_PMP_PUMPS_SQLAGGREGATE_META_CONNECTIONSTRING=user=${POSTGRES_USER} password=${POSTGRES_PASSWORD} host=${POSTGRES_HOST} port=${POSTGRES_PORT} database=tyk_analytics

  tyk-mongo:
    entrypoint: ["echo", "Docker Mongo service disabled. Using Postgres service instead.", ""]
    command: []

  tyk-postgres:
    image: postgres:latest
    container_name: tyk-postgres

    environment:
      - POSTGRES_DB=tyk_analytics
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}

    ports:
      - "${POSTGRES_MACHINE_PORT}:${POSTGRES_PORT}"

    volumes:
      - postgres-data:/data/db

    networks:
      - tyk

volumes:
  postgres-data:
